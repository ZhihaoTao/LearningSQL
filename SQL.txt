1. 简单地说，SQL（Structured Query Language）就是访问和处理关系数据库的计算机标准语言，要使用关系数据库就必须掌握SQL。今天，SQL数据库仍然承担了各种应用程序的核心数据存储，而NoSQL数据库作为SQL数据库的补充，两者不再是二选一的问题，而是主从关系。所以，无论使用哪种编程语言，无论是Web开发、游戏开发还是手机开发，掌握SQL，是所有软件开发人员所必须的。

2. csv（Comma-Separated Values）文件是为了实现简单的数据存储，是一个纯文本的文件，最广泛的应用是在程序之间转移表格数据，能够兼容各类程序，这种文件格式经常用来作为不同程序之间的数据交互的格式。由于是纯文本，任何编辑器也都可打开。

3. 数据库按照数据结构来组织、存储和管理数据，实际上，数据库一共有三种模型：层次模型、网状模型、关系模型，随着时间的推移和市场竞争，最终，基于关系模型的关系数据库获得了绝对市场份额。显然，相比层次模型和网状模型，关系模型理解和使用起来最简单。

   层次模型就是以“上下级”的层次关系来组织数据的一种方式，层次模型的数据结构看起来就像一颗树；

   网状模型把每个数据节点和其他很多节点都连接起来，它的数据结构看起来就像很多城市之间的路网：

   关系模型把数据看作是一个二维表格，任何数据都可以通过行号+列号来唯一确定，它的数据模型看起来就是一个Excel表。

4. 除了一些常用的数据类型——整型/浮点型/时间类型/字符串类型/日期类型等，还有一些各数据厂商所支持的特定数据类型，例如json。

5. 目前，主流的关系数据库主要分为以下几类：

  （1）商用数据库，例如：Oracle，SQL Server，DB2等；

  （2）开源数据库，例如：MySQL，PostgreSQL等；

  （3）桌面数据库，以微软Access为代表，适合桌面应用程序使用；

  （4）嵌入式数据库，以Sqlite为代表，适合手机应用和桌面程序。

6. 总的来说，SQL语言定义了这么几种操作数据库的能力：

  （1）DDL：Data Definition Language；DDL允许用户定义数据，也就是创建表、删除表、修改表结构这些操作。通常，DDL由数据库管理员执行。

  （2）DML：Data Manipulation Language；DML为用户提供添加、删除、更新数据的能力，这些是应用程序对数据库的日常操作。

  （3）DQL：Data Query Language；DQL允许用户查询数据，这也是通常最频繁的数据库日常操作。

7. SQL语言关键字不区分大小写！！！但是，针对不同的数据库，对于表名和列名，有的数据库区分大小写，有的数据库不区分大小写。同一个数据库，有的在Linux上区分大小写，有的在Windows上不区分大小写。一般约定：SQL关键字总是大写，以示突出，数据库名、表名和列名（字段名）均使用小写。

8. 关系模型：关系模型本质上就是若干个存储数据的二维表。表的每一行称为记录（Record），记录是一个逻辑意义上的数据；表的每一列称为字段（Column），同一个表（同一列）的每一行记录都拥有相同的若干字段。

9. 通常情况下，字段应该避免允许为NULL。不允许为NULL可以简化查询条件，加快查询速度，也利于应用程序读取数据后无需判断是否为NULL。尽量避免NULL：应该指定列为NOT NULL，除非你想存储NULL。在MySQL中，含有空值的列很难进行查询优化。因为它们使得索引、索引的统计信息以及比较运算更加复杂。你应该用0、一个特殊的值或者一个空串代替空值。

10. 在关系数据库中，关系是通过主键和外键来维护的。

11. 在关系数据库中，一张表中的每一行数据被称为一条记录。一条记录就是由多个字段组成的。对于关系表，有个很重要的约束，就是任意两条记录不能重复——不能重复不是指两条记录不完全相同，而是指能够通过某个字段唯一区分出不同的记录，这个字段被称为主键。选取主键的一个基本原则是：不使用任何与业务相关的字段作为主键，因此，身份证号、手机号、邮箱地址这些看上去可以唯一的字段，均不可用作主键。作为主键最好是完全业务无关的字段，我们一般把这个字段命名为id。

12. 注意：主键不要带有业务含义，而应该使用BIGINT自增或者GUID类型。如果使用INT自增类型，那么当一张表的记录数超过2147483647（约21亿）时，会达到上限而出错。使用BIGINT自增类型则可以最多约922亿亿条记录。

13. 在students表中，通过class_id的字段，可以把数据与另一张表classes关联起来，这种列称为外键。外键并不是通过列名实现的，而是通过定义外键约束实现的。通过定义外键约束，关系数据库可以保证无法插入无效的数据。由于外键约束会降低数据库的性能，大部分互联网应用程序为了追求速度，并不设置外键约束，而是仅靠应用程序自身来保证逻辑的正确性。这种情况下，class_id仅仅是一个普通的列，只是它起到了外键的作用而已。

14. 一对一、一对多和多对多描述的是各个表的记录的关系。

16. 索引属于存储引擎级别的概念，不同存储引擎对索引的实现方式是不同的。可以对一张表创建多个索引。索引的优点是提高了查询效率，缺点是在插入、更新和删除记录时，需要同时修改索引，因此，索引越多，插入、更新和删除记录的速度就越慢。通过创建唯一索引，可以保证某一列的值具有唯一性。

17. MySQL Client的可执行程序是mysql，MySQL Server的可执行程序是mysqld。

18. 关系数据库的基本操作就是增删改查，即CRUD：Create、Retrieve、Update、Delete。

    Retrieve：查，SELECT

    Create：增，INSERT

    Update：改，UPDATE

    Delete：删，DELETE

    通过WHERE条件来设定查询条件：SELECT * FROM <表名> WHERE <条件表达式>，（1）条件表达式可以用<条件1> AND <条件2>表达满足条件1并且满足条件2；（2）第二种条件是<条件1> OR <条件2>，表示满足条件1或者满足条件2；（3）第三种条件是NOT <条件>，表示“不符合该条件”的记录；（4）条件运算按照NOT、AND、OR的优先级进行，即NOT优先级最高，其次是AND，最后是OR。

    注意SQL记录集的索引从0开始！！！虽然id一般是从1开始的，但SQL记录集（数据表）内部其实是从0开始的，因此分页查询要从头开始查询时OFFSET后面要接0。

    基本查询（查询所有行和列）——>条件查询（按条件查询）——>投影查询（按列查询）——排序（ORDER，放在WHILE后面）——>分页查询（LIMIT M OFFSET N，每页最多查询M条记录，从要查询的记录集第N条记录开始，此处N不是主键id；OFFSET是可选的，默认OFFSET 0；LIMIT M OFFSET N还可以简写成LIMIT M, N；使用LIMIT M OFFSET N分页时，随着N越来越大，查询效率也会越来越低）——>聚合查询（聚合函数，GROUP BY还能实现分组聚合）——>多表查询——>连接查询（多表查询的一种，JOIN）

19. 数据库事务——ACID特性；隔离级别——数据一致性






















































